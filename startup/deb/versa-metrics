#! /bin/sh
# /etc/init.d/versa_metrics

### BEGIN INIT INFO
# Provides: Runs a Python script on startup
# Required-Start: versa_metrics start
# Required-Stop: versa_metrics stop
# Default-Start: 2 3 4 5
# Default-stop: 0 1 6
# Short-Description: Simple script to run python program at boot
# Description: Runs a python program at boot
### END INIT INFO

export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
DAEMON_PATH="/opt/versa_metrics"
NAME=versa_metrics
DESC="VERSA Metrics"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
LOGFILE=/var/log/$NAME.log

start() {
  if [ -f /var/run/$PIDFILE ] && kill -0 $(cat /var/run/$PIDFILE); then
    echo 'Service already running' >&2
    return 1
  fi
  printf "%-50s" "Starting $NAME"
  PID=`/usr/bin/nohup python /opt/versa_metrics/bin/versa_metrics.py  > /dev/null 2>&1 & echo $!`
  if [ $? -eq 0 ]; then
    if [ -z $PID ]; then
      printf "%s\n" "Failed to start ${NAME}"
    else
      echo $PID > $PIDFILE
      printf "%s\n" "Ok"
    fi
  fi
}

stop() {
  if [ ! -f "$PIDFILE" ] || ! kill -0 $(cat "$PIDFILE"); then
    echo 'Service not running' >&2
    return 1
  fi
  printf "%-50s" "Stopping $NAME"
  kill -15 $(cat "$PIDFILE") && rm -f "$PIDFILE"
  printf "%s\n" "Stopped"
}

status() {
  printf "%-50s" "Checking $NAME"
  if [ -f $PIDFILE ]; then
    PID=`cat $PIDFILE`
    if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
      printf "%s\n" "Process dead but pidfile exists"
    else
      printf "%s\n" "running"
    fi
  else
    printf "%s\n" "not running"
  fi
}


case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status
    ;;
  restart)
    stop
    start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"
esac